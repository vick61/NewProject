#!/bin/bash

# 🔧 Environment Setup for Schemes Management Platform
# This script sets up your environment variables and GCP configuration

set -e

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

print_color() {
    echo -e "${1}${2}${NC}"
}

print_color $BLUE "🔧 Environment Setup for Schemes Management Platform"
print_color $BLUE "==================================================="

# Check if .env.production exists
if [ -f ".env.production" ]; then
    print_color $YELLOW "⚠️ .env.production already exists. Do you want to recreate it? (y/N)"
    read -p "" recreate
    if [[ $recreate != [Yy]* ]]; then
        print_color $GREEN "✅ Using existing environment configuration"
        exit 0
    fi
fi

print_color $BLUE "🔐 Supabase Configuration"
print_color $BLUE "=========================="

echo "Please provide your Supabase project details:"
echo ""

# Get Supabase URL
read -p "Supabase URL (https://your-project.supabase.co): " SUPABASE_URL
if [[ ! $SUPABASE_URL =~ ^https://.+\.supabase\.co$ ]]; then
    print_color $RED "❌ Invalid Supabase URL format. Should be: https://your-project.supabase.co"
    exit 1
fi

# Get Supabase Anon Key
echo ""
read -p "Supabase Anon Key: " SUPABASE_ANON_KEY
if [ -z "$SUPABASE_ANON_KEY" ]; then
    print_color $RED "❌ Supabase Anon Key is required"
    exit 1
fi

# Extract project ID from URL
PROJECT_REF=$(echo $SUPABASE_URL | sed 's|https://||' | sed 's|\.supabase\.co||')

print_color $BLUE "📝 Creating environment files..."

# Create .env.production
cat > .env.production << EOF
# Supabase Configuration
VITE_SUPABASE_URL=$SUPABASE_URL
VITE_SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

# Production environment
NODE_ENV=production
EOF

print_color $GREEN "✅ Created .env.production"

# Create utils/supabase/info.tsx if it doesn't exist or update it
mkdir -p utils/supabase

cat > utils/supabase/info.tsx << EOF
// Supabase configuration
// This file is auto-generated by environment-setup.sh

export const projectId = '$PROJECT_REF'
export const publicAnonKey = '$SUPABASE_ANON_KEY'
export const supabaseUrl = '$SUPABASE_URL'
EOF

print_color $GREEN "✅ Updated utils/supabase/info.tsx"

# Store in Google Secret Manager if gcloud is available
if command -v gcloud &> /dev/null; then
    print_color $BLUE "🔐 Storing secrets in Google Secret Manager..."
    
    # Check if user wants to store in Secret Manager
    print_color $YELLOW "Do you want to store these credentials in Google Secret Manager? (y/N)"
    read -p "" store_secrets
    
    if [[ $store_secrets == [Yy]* ]]; then
        PROJECT_ID=$(gcloud config get-value project 2>/dev/null || echo "")
        
        if [ -z "$PROJECT_ID" ]; then
            print_color $YELLOW "Enter your GCP Project ID:"
            read -p "Project ID: " PROJECT_ID
            gcloud config set project $PROJECT_ID
        fi
        
        # Enable Secret Manager API
        gcloud services enable secretmanager.googleapis.com
        
        # Store secrets
        echo -n "$SUPABASE_URL" | gcloud secrets create supabase-url --data-file=- 2>/dev/null || \
        echo -n "$SUPABASE_URL" | gcloud secrets versions add supabase-url --data-file=-
        
        echo -n "$SUPABASE_ANON_KEY" | gcloud secrets create supabase-anon-key --data-file=- 2>/dev/null || \
        echo -n "$SUPABASE_ANON_KEY" | gcloud secrets versions add supabase-anon-key --data-file=-
        
        print_color $GREEN "✅ Secrets stored in Google Secret Manager"
    fi
fi

print_color $GREEN "🎉 Environment setup complete!"

echo ""
print_color $BLUE "📋 Summary:"
echo "• .env.production created with Supabase configuration"
echo "• utils/supabase/info.tsx updated with project details"
if [[ $store_secrets == [Yy]* ]]; then
    echo "• Credentials stored in Google Secret Manager"
fi

echo ""
print_color $BLUE "🚀 Next Steps:"
echo "1. Run: chmod +x deploy-gcp.sh"
echo "2. Run: ./deploy-gcp.sh"
echo "3. Choose your preferred deployment method"

echo ""
print_color $YELLOW "⚠️ Important Security Notes:"
echo "• Never commit .env.production to version control"
echo "• Add .env.production to your .gitignore file"
echo "• Keep your Supabase keys secure"