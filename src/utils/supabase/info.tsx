/* AUTOGENERATED FILE - DO NOT EDIT CONTENTS */

export const projectId = "baabzbunxucblvtojbfj"
export const projectUrl = "https://baabzbunxucblvtojbfj.supabase.co"
export const publicAnonKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJhYWJ6YnVueHVjYmx2dG9qYmZqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU5NjkyNDAsImV4cCI6MjA3MTU0NTI0MH0.4Cr44RQtGzBfs4QlyqXHd3ogvrsN2YULMQdAdygnfx4"

// Get the worker URL from environment variables with fallbacks
const getWorkerUrl = () => {
  // Check if we have a properly configured Cloudflare Worker URL
  if (typeof import.meta !== 'undefined' && import.meta.env?.VITE_CLOUDFLARE_WORKER_URL) {
    const cloudflareUrl = import.meta.env.VITE_CLOUDFLARE_WORKER_URL
    // Only use Cloudflare URL if it's not a placeholder
    if (cloudflareUrl && 
        !cloudflareUrl.includes('your-subdomain') && 
        !cloudflareUrl.includes('your_') &&
        !cloudflareUrl.includes('placeholder') &&
        cloudflareUrl !== 'undefined' &&
        cloudflareUrl.startsWith('http')) {
      console.log('üåê Using Cloudflare Worker URL:', cloudflareUrl)
      return cloudflareUrl
    }
  }
  
  // Default to Supabase Edge Functions for reliable operation
  console.log('üì° Using Supabase Edge Functions URL')
  return `https://${projectId}.supabase.co/functions/v1/make-server-ce8ebc43`
}

// Cloudflare Worker URL - dynamically determined
export const workerUrl = getWorkerUrl()
export const apiBaseUrl = workerUrl

// Legacy Supabase Edge Function URL (for fallback)
export const supabaseEdgeUrl = `https://${projectId}.supabase.co/functions/v1/make-server-ce8ebc43`